{\rtf1\ansi\deflang1033\ftnbj\uc1\deff0 
{\fonttbl{\f0 \fswiss Arial;}{\f1 \fswiss \fcharset0 Times New Roman;}{\f2 \froman \fcharset0 Times New Roman;}{\f3 \fnil Lucida Sans;}{\f4 \fnil Calibri;}{\f5 \fnil Liberation Sans Narrow;}{\f6 \fnil Courier New;}}
{\colortbl ;\red255\green255\blue255 ;\red0\green0\blue0 ;\red255\green0\blue0 ;\red255\green255\blue128 ;\red128\green0\blue0 ;\red127\green127\blue127 ;\red54\green95\blue145 ;\red79\green129\blue188 ;\red35\green62\blue95 ;\red63\green63\blue63 ;\red95\green95\blue95 ;\red47\green47\blue47 ;\red0\green64\blue128 ;\red79\green79\blue79 ;\red111\green111\blue111 ;}
{\stylesheet{\f0\fs24 Normal;}{\cs1 Default Paragraph Font;}{\cs2\i Italics;}{\cs3\b Bold;}{\cs4\b\i Bold Italics;}{\cs5\f1 Field Label;}{\cs6\f3\fs16\b\protect\cf1\cb3\chcbpat3 SSTemplateField;}{\cs7\f3\fs16\b\protect\cf2\cb4\chcbpat4 SSBookmark;}{\s8\snext0\f4\fs72\b\fi0\li0\ri0\sb0\sa0\sl0\qr Cover Heading 1;}{\s9\snext0\f4\fs60\cf5\fi0\li0\ri0\sb0\sa0\sl0\qr Cover Heading 2;}{\s10\snext0\f5\fs28\fi0\li0\ri0\sb0\sa0\sl0\qr Cover Text 1;}{\s11\snext0\f5\fs20\cf6\fi0\li0\ri0\sb0\sa0\sl0\qr Cover Text 2;}{\s12\snext0\outlinelevel0\f4\fs36\b\cf7\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel0 Heading 1;}{\s13\snext0\outlinelevel1\f4\fs32\b\cf8\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel1 Heading 2
;}{\s14\snext0\outlinelevel2\f4\fs28\b\cf8\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel2 Heading 3;}{\s15\snext0\outlinelevel3\f4\fs28\b\i\cf8\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel3 Heading 4;}{\s16\snext0\outlinelevel4\f4\fs24\b\cf9\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel4 Heading 5;}{\s17\snext0\outlinelevel5\f4\fs24\b\i\cf9\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel5 Heading 6;}{\s18\snext0\outlinelevel6\f4\fs24\b\i\cf10\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel6 Heading 7;}{\s19\snext0\outlinelevel7\f4\fs22\b\cf10\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel7 Heading 8;}{\s20\snext0\outlinelevel8\f4\fs22\b\i\cf10\fi0\li0\ri0\sb0\sa80\sl0\outlinelevel8 Heading 9;}{\s21\snext0\f4\fs32\b\sb240\sa80\sl0 TOC Heading
;}{\s22\snext0\outlinelevel0\f1\fs20\b\tqr\tldot\tx8280\fi0\li0\ri720\sb120\sa40\sl0\outlinelevel0 TOC 1;}{\s23\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li180\ri720\sb40\sa20\sl0 TOC 2;}{\s24\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li360\ri720\sb40\sa20\sl0 TOC 3;}{\s25\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li540\ri720\sb40\sa20\sl0 TOC 4;}{\s26\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li720\ri720\sb40\sa20\sl0 TOC 5;}{\s27\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li900\ri720\sb40\sa20\sl0 TOC 6;}{\s28\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li1080\ri720\sb40\sa20\sl0 TOC 7;}{\s29\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li1260\ri720\sb40\sa20\sl0 TOC 8;}{\s30\snext0\f1\fs20\tqr\tldot\tx8280\fi0\li1440\ri720\sb40\sa20\sl0 TOC 9
;}{\s31\snext0\f1\fs16\tqr\tx9720 Header;}{\s32\snext0\f1\fs16\qc Footer;}{\s33\snext0\f1\fs20\cf11\fi0\li0\ri0\sb0\sa0\sl0\qr Properties;}{\s34\snext0\f1\fs20 Notes;}{\s35\snext0\f1\qc Diagram Image;}{\s36\snext0\f1\fs16\qc Diagram Label;}{\s37\snext0\f1\fs16 Table Label;}{\s38\snext0\f1\fs18\b\fi0\li90\ri90\sb80\sa40\sl0 Table Heading;}{\s39\snext0\f1\fs22\b\fi0\li270\ri270\sb0\sa0\sl0 Table Title 0;}{\s40\snext0\f1\fs18\b\ul\fi0\li180\ri270\sb80\sa80\sl0 Table Title 1;}{\s41\snext0\f1\fs18\ul\fi0\li270\ri270\sb0\sa120\sl0 Table Title 2;}{\s42\snext0\f1\fs18\fi0\li270\ri270\sb20\sa20\sl0 Table Text Normal;}{\s43\snext0\f1\fs18\cf12\fi0\li270\ri270\sb20\sa20\sl0 Table Text Light
;}{\s44\snext0\f1\fs18\b\fi0\li270\ri270\sb20\sa20\sl0 Table Text Bold;}{\s45\snext0\f4\fs20\b\cf13\fi0\li0\ri0\sb0\sa0\sl0\qr Cover Text 3;}{\s46\snext0\f4\fs20\b\i\cf10\fi0\li0\ri0\sb0\sa80\sl0 Title Small;}{\s47\snext0\f6\fs16\fi0\li90\ri90\sb0\sa0\sl0 Table Text Code;}{\cs48\f6 Code;}{\s49\snext0\f1\fs20 Items;}{\s50\snext0\f1\fs18\b\cf14\fi0\li90\ri90\sb80\sa40\sl0 Table Heading Light;}{\cs51\f1\cf15 Table Field Label;}{\cs52\caps All Caps;}}
{\*\revtbl{Unknown;}}
\paperw12240\paperh15840\margl1080\margr1080\margt720\margb720\headery720\footery720\nogrowautofit\deftab720\formshade\nofeaturethrottle1\dntblnsbdb\fet4\aendnotes\aftnnrlc\pgbrdrhead\pgbrdrfoot 
\sectd\pgwsxn11902\pghsxn16835\guttersxn0\marglsxn1080\margrsxn1080\margtsxn720\margbsxn720\headery720\footery720\sbkpage\pgncont\pgndec 
\plain\plain\f0\fs24\ql{\*\bkmkstart GEOMETRIC_PRIMITIVE}{\*\bkmkstart BKM_5BA4E1D8_85FE_4C3C_9084_071399936FC4}\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 Geometric primitive Delimiter\plain\f1\fs20\lang3081\hich\f1\dbch\f1\loch\f1\fs20\par 
\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
{\*\bkmkstart BKM_FD768889_3B08_4A28_9123_14CE8EFF3244}[[Bearing-section]]\par 
[cols="1a"]\par 
|===\par 
|*Bearing* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! Bearing is a data type used to represent direction in the coordinate reference system. In a 2D coordinate reference system, this can be accomplished using a "angle measured from true north" or a 2D vector point in that direction. In a 3D coordinate reference system, two angles or any 3D vector is possible. If both a set of angles and a vector are given, then they shall be consistent with one another.  \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<-section,>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 datatype\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! -- at least one value is not NULL (Invariant): \par 
\{angle.isEmpty\{\} implies Not direction.isEmpty()\}\par 
\{direction.isEmpty\{\} implies Not angle.isEmpty()\}    \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_D2570BF0_B837_4D5F_BCC7_17F28F9E9E3F} \par 
!\{set:cellbgcolor:#FFFFFF\} angle\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Angle-section,Angle>>  [0..2] !{\*\bkmkend BKM_D2570BF0_B837_4D5F_BCC7_17F28F9E9E3F}\par 
{\*\bkmkstart BKM_F4590F9C_57AA_43A3_A8D7_674BC1AC915E} \par 
!\{set:cellbgcolor:#FFFFFF\} direction\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Vector-section,Vector>>  [0..1] !{\*\bkmkend BKM_F4590F9C_57AA_43A3_A8D7_674BC1AC915E}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_FD768889_3B08_4A28_9123_14CE8EFF3244}\par 
\par 
{\*\bkmkstart BKM_FD776E60_9DAC_47BB_BD74_0E616A29326C}[[GM_Curve-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Curve* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_Curve (Figure 11) is a descendent subtype of GM_Primitive through GM_OrientablePrimitive. It is the basis for 1-dimensional geometry. A curve is a continuous image of an open interval and so could be written as a parameterized function such as c(t):(a, b)\'aeEn where "t" is a real parameter and En is Euclidean space of dimension n (usually 2 or 3, as determined by the coordinate reference system). Any other parameterization that results in the same 
image curve, traced in the same direction, such as any linear shifts and positive scales such as e(t) = c(a + t(b-a)):(0,1) \'aeEn, is an equivalent representation of the same curve. For the sake of simplicity, GM_Curves should be parameterized by arc length, so that the parameterization operation inherited from GM_GenericCurve (see 6.4.7) will be valid for parameters between 0 and the length of the curve. \par 
Curves are continuous, connected, and have a measurable length in terms of the coordinate system. The orientation of the curve is determined by this parameterization, and is consistent with the tangent function, which approximates the derivative function of the parameterization and shall always point in the "forward" direction. The parameterization of the reversal of the curve defined by c(t):(a, b)\'aeEn would be defined by a function of the form s(t) = c(a + b - t):(a, b)\'aeEn.\par 
A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_OrientableCurve-section,GM_OrientableCurve>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_GenericCurve-section,GM_GenericCurve>>  \par 
[]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_FD776E60_9DAC_47BB_BD74_0E616A29326C}\par 
\par 
{\*\bkmkstart BKM_8623ED09_8C89_484D_85DF_B29713FF61E0}[[GM_CurveBoundary-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_CurveBoundary* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! The boundary of GM_Curves shall be represented as GM_CurveBoundary. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_PrimitiveBoundary-section,GM_PrimitiveBoundary>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} startPoint\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Point-section,GM_Point>>  \par 
[1]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} endPoint\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Point-section,GM_Point>>  \par 
[1]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_8623ED09_8C89_484D_85DF_B29713FF61E0}\par 
\par 
{\*\bkmkstart BKM_9931D51B_4DA7_4B78_8A5D_9E42C513E3D5}[[GM_CurveInterpolation-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_CurveInterpolation* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_CurveInterpolation is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema. As a code list, there is no intention of limiting the potential values of GM_CurveInterpolation. Subtypes of GM_CurveSegment can be spawned directly through subclassing, or indirectly by specifying an interpolation method and an associated controlParameters record to support it. Valid meanings for "interpolation" include, 
but are not limited, to the following:\par 
a) Linear (linear) - the interpolation mechanism shall return DirectPositions on a straight line between each consecutive pair of controlPoints.\par 
b) Geodesic (geodesic) - the interpolation mechanism shall return DirectPositions on a geodesic curve between each consecutive pair of controlPoints. A geodesic curve is a curve of shortest length. The geodesic shall be determined in the coordinate reference system of the GM_Curve in which the GM_CurveSegment is used.\par 
c) Circular arc by 3 points (circularArc3Points) - for each set of three consecutive controlPoints, the middle one being an even offset from the beginning of the sequence of control points, the interpolation mechanism shall return DirectPositions on a circular arc passing from the first point through the middle point to the third point. The sequence of control points shall have an odd number of elements. Note: if the 3 points are co-linear, the circular arc becomes a straight line. \par 
d) Circular arc by 2 points and bulge factor (circularArc2PointWithBulge) - for each consecutive pair of controlPoints, the interpolation mechanism shall return DirectPositions on a circular arc passing from the first controlPoint to the second controlPoint, such that the associated control parameter determines the offset of the center of the arc from the center point of the chord, positive for leftward and negative for rightward. This form shall only be used in 2 dimensions because of the restricted 
nature of the definition technique.\par 
e) Elliptical arc (elliptical) - for each set of four consecutive controlPoints, the interpolation mechanism shall return DirectPositions on an elliptical arc passing from the first controlPoint through the middle controlPoints in order to the fourth controlPoint. Note: if the 4 controlPoints are co-linear, the arc becomes a straight line. If the 4 controlPoints are on the same circle, the arc becomes a circular one.\par 
f) Clothoid (clothoid) - uses a Cornu's spiral or clothoid interpolation.\par 
g) Conic arc (conic) - same as elliptical arc but using 5 consecutive controlPoints to determine a conic section.\par 
h) Polynomial Spline (polynomialSpline) - the controlPoints are ordered as in a line-string, but they are spanned by a polynomial spline function. Normally, the degree of continuity is determined by the degree of the polynomials chosen. \par 
i) Cubic spline (cubicSpline) - the control points are interpolated using initial tangents and cubic polynomials, a form of degree 3 polynomial spline.\par 
j) Rational Spline (rationalSpline) - the controlPoints are ordered as in a line string, but they are spanned by a rational (quotient of polynomials) spline function. Normally, the degree of continuity is determined by the degree of the polynomials chosen. \par 
This list shall be implemented by a code list, and may vary in actual values from the above strings.\par 
GM_CurveInterpolation::\par 
linear \par 
geodesic \par 
circularArc3Points \par 
circularArc2PointWithBulge \par 
elliptical \par 
clothoid \par 
conic \par 
polynomialSpline \par 
cubicSpline\par 
rationalSpline \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<-section,>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 CodeList\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_5DA421E9_9FD7_4570_9078_ED1A8776FEA6} \par 
!\{set:cellbgcolor:#FFFFFF\} circularArc2PointWithBulge\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_5DA421E9_9FD7_4570_9078_ED1A8776FEA6}\par 
{\*\bkmkstart BKM_528FEB02_6C54_4483_86FC_477E940CE2F4} \par 
!\{set:cellbgcolor:#FFFFFF\} circularArc3Points\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_528FEB02_6C54_4483_86FC_477E940CE2F4}\par 
{\*\bkmkstart BKM_7FEEA709_6BC5_44C1_9F38_A335707ECD3C} \par 
!\{set:cellbgcolor:#FFFFFF\} clothoid\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_7FEEA709_6BC5_44C1_9F38_A335707ECD3C}\par 
{\*\bkmkstart BKM_93067C12_FD81_41C4_B2AB_A580C501A870} \par 
!\{set:cellbgcolor:#FFFFFF\} conic\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_93067C12_FD81_41C4_B2AB_A580C501A870}\par 
{\*\bkmkstart BKM_5A67C857_EAFB_47B5_A98B_C1861FAA3A1E} \par 
!\{set:cellbgcolor:#FFFFFF\} cubicSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_5A67C857_EAFB_47B5_A98B_C1861FAA3A1E}\par 
{\*\bkmkstart BKM_65DD51BA_8AD0_44A0_BB9D_CA4ADD175490} \par 
!\{set:cellbgcolor:#FFFFFF\} elliptical\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_65DD51BA_8AD0_44A0_BB9D_CA4ADD175490}\par 
{\*\bkmkstart BKM_BA933B12_CD0D_4B5A_94DB_E87BA1144217} \par 
!\{set:cellbgcolor:#FFFFFF\} geodesic\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_BA933B12_CD0D_4B5A_94DB_E87BA1144217}\par 
{\*\bkmkstart BKM_02E3DBF3_7DC8_48C8_8E73_BCA64611EE91} \par 
!\{set:cellbgcolor:#FFFFFF\} linear\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_02E3DBF3_7DC8_48C8_8E73_BCA64611EE91}\par 
{\*\bkmkstart BKM_A5F01CB0_356F_4583_9980_C914C87CE997} \par 
!\{set:cellbgcolor:#FFFFFF\} polynomialSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_A5F01CB0_356F_4583_9980_C914C87CE997}\par 
{\*\bkmkstart BKM_301AD7C1_914E_4A88_921F_F99CE5D5F901} \par 
!\{set:cellbgcolor:#FFFFFF\} rationalSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_301AD7C1_914E_4A88_921F_F99CE5D5F901}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_9931D51B_4DA7_4B78_8A5D_9E42C513E3D5}\par 
\par 
{\*\bkmkstart BKM_24AB3B74_F440_47C7_951A_F36A201E8C93}[[GM_CurveSegment-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_CurveSegment* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_CurveSegment defines a homogeneous segment of a GM_Curve. Each GM_CurveSegment shall be in, at most, one GM_Curve. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<-section,>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 Abstract\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} curve\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Curve-section,GM_Curve>>  \par 
[0..1]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_GenericCurve-section,GM_GenericCurve>>  \par 
[]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_3B6F9154_3901_4882_BB08_706E2A3567DA} \par 
!\{set:cellbgcolor:#FFFFFF\} interpolation\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<GM_CurveInterpolation-section,GM_CurveInterpolation>>  !{\*\bkmkend BKM_3B6F9154_3901_4882_BB08_706E2A3567DA}\par 
{\*\bkmkstart BKM_8C173693_FA51_47FD_A633_8F63A7AD3814} \par 
!\{set:cellbgcolor:#FFFFFF\} numDerivativeInterior\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Integer-section,Integer>>  [0..1] !{\*\bkmkend BKM_8C173693_FA51_47FD_A633_8F63A7AD3814}\par 
{\*\bkmkstart BKM_792C4E25_038B_4EF3_825C_C10D9EE8CF4D} \par 
!\{set:cellbgcolor:#FFFFFF\} numDerivativesAtEnd\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Integer-section,Integer>>  [0..1] !{\*\bkmkend BKM_792C4E25_038B_4EF3_825C_C10D9EE8CF4D}\par 
{\*\bkmkstart BKM_BE9795BA_B391_4778_81AB_1D336553FCBF} \par 
!\{set:cellbgcolor:#FFFFFF\} numDerivativesAtStart\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Integer-section,Integer>>  [0..1] !{\*\bkmkend BKM_BE9795BA_B391_4778_81AB_1D336553FCBF}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_24AB3B74_F440_47C7_951A_F36A201E8C93}\par 
\par 
{\*\bkmkstart BKM_A1ADE170_B2D2_42F1_970C_D683A233B765}[[GM_OrientableCurve-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_OrientableCurve* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_OrientableCurve consists of a curve and an orientation inherited from GM_OrientablePrimitive. If the orientation is "+", then the GM_OrientableCurve is a GM_Curve. If the orientation is "-", then the GM_OrientableCurve is related to another GM_Curve with a parameterization that reverses the sense of the curve traversal.\par 
GM_OrientableCurve:\par 
\{Orientation = "+" implies primitive = self\};\par 
\{Orientation = "-" implies \par 
primitive.parameterization(length()-s) = parameterization(s)\}; \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_OrientablePrimitive-section,GM_OrientablePrimitive>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! primitive.isTypeOf(GM_Curve) (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Curve-section,Curve>>  \par 
[]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_A1ADE170_B2D2_42F1_970C_D683A233B765}\par 
\par 
{\*\bkmkstart BKM_F3BD2CD9_BB59_4D66_8D2E_FB98BE4680A0}[[GM_OrientablePrimitive-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_OrientablePrimitive* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! An orientable primitives (Figure 10) are those that can be mirrored into new geometric objects in terms of their internal local coordinate systems (manifold charts). For curves, the orientation reflects the direction in which the curve is traversed, that is, the sense of its parameterization. When used as boundary curves, the surface being bounded is to the "left" of the oriented curve. For surfaces, the orientation reflects from which direction the 
local coordinate system can be viewed as right handed, the "top" or the surface being the direction of a completing z-axis that would form a right-handed system. When used as a boundary surface, the bounded solid is "below" the surface. The orientation of points and solids has no immediate geometric interpretation in 3-dimensional space.\par 
GM_OrientablePrimitive objects are essentially references to geometric primitives that carry an "orientation" reversal flag (either "+" or "-") that determines whether this primitive agrees or disagrees with the orientation of the referenced object. \par 
NOTE There are several reasons for subclassing the "positive" primitives under the orientable primitives. First is a matter of the semantics of subclassing. Subclassing is assumed to be a "is type of" hierarchy. In the view used, the "positive" primitive is simply the orientable one with the positive orientation. If the opposite view were taken, and orientable primitives were subclassed under the "positive" primitive, then by subclassing logic, the "negative" primitive would have to hold the same 
sort of geometric description that the "positive" primitive does. The only viable solution would be to separate "negative" primitives under the geometric root as being some sort of reference to their opposite. This adds a great deal of complexity to the subclassing tree. To minimize the number of objects and to bypass this logical complexity, positively oriented primitives are self-referential (are instances of the corresponding primitive subtype) while negatively oriented primitives are not. \par 
Orientable primitives are often denoted by a sign (for the orientation) and a base geometry (curve or surface). The sign datatype is defined in ISO 19103. If "c" is a curve, then "<+, c>" is its positive orientable curve and "<-, c>" is its negative orientable curve. In most cases, leaving out the syntax for record "< , >" does not lead to confusion, so "<+, c>" may be written as "+c" or simply "c", and "<-, c>" as "-c". Curve space arithmetic can be performed if the curves align properly, so that:\par 
For c, d : GM_OrientableCurves such that c.endPoint = d.startPoint then\par 
( c + d ) ==: GM_CompositeCurve = < c, d > \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_Primitive-section,GM_Primitive>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! (orientation = "+") =  (primitive = self ) (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Orientable-section,Orientable>>  \par 
[]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_53E06686_4A78_4816_BEAB_EB7A75844761} \par 
!\{set:cellbgcolor:#FFFFFF\} orientation\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Sign-section,Sign>>  !{\*\bkmkend BKM_53E06686_4A78_4816_BEAB_EB7A75844761}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_F3BD2CD9_BB59_4D66_8D2E_FB98BE4680A0}\par 
\par 
{\*\bkmkstart BKM_DB3D0BBC_155F_46B4_8389_3D74F23CD3EA}[[GM_OrientableSurface-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_OrientableSurface* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_OrientableSurface consists of a surface and an orientation inherited from GM_OrientablePrimitive. If the orientation is "+", then the GM_OrientableSurface is a GM_Surface. If the orientation is "-", then the GM_OrientableSurface is a reference to a GM_Surface with an upNormal that reverses the direction for this GM_OrientableSurface, the sense of "the top of the surface" (see 6.4.33.2).\par 
GM_OrientableSurface:\par 
\{Orientation = "+" implies primitive = self\};\par 
\{(Orientation = "-" and TransfiniteSet::contains(p : DirectPosition)) \par 
 implies (primitive.upNormal(p) = - self.upNormal(p))\}; \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_OrientablePrimitive-section,GM_OrientablePrimitive>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! primitive.isTypeOf(GM_Surface) (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Surface-section,Surface>>  \par 
[]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} composite\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_CompositeSurface-section,GM_CompositeSurface>>  \par 
[0..*]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_DB3D0BBC_155F_46B4_8389_3D74F23CD3EA}\par 
\par 
{\*\bkmkstart BKM_3CC5A3E8_2ECA_4E42_B09C_935BD5D3B64A}[[GM_Point-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Point* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_Point (Figure 9) is the basic data type for a geometric object consisting of one and only one point.  \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_Primitive-section,GM_Primitive>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Point-section,Point>>  \par 
[]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} composite\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_CompositePoint-section,GM_CompositePoint>>  \par 
[0..*]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_610FC7CF_B6ED_4E34_A0DD_9862E49C457B} \par 
!\{set:cellbgcolor:#FFFFFF\} position\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<DirectPosition-section,DirectPosition>>  !The attribute "position" shall be the DirectPosition of this GM_Point.\par 
GM_Point::position [1] : DirectPosition\par 
NOTE In most cases, the state of a GM_Point is fully determined by its position attribute. The only exception to this is if the GM_Point has been subclassed to provide additional non-geometric information such as symbology.{\*\bkmkend BKM_610FC7CF_B6ED_4E34_A0DD_9862E49C457B}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_3CC5A3E8_2ECA_4E42_B09C_935BD5D3B64A}\par 
\par 
{\*\bkmkstart BKM_90B3BA4D_2826_43E5_8228_B033DFBE1FD0}[[GM_Primitive-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Primitive* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_Primitive (Figure 8) is the abstract root class of the geometric primitives. Its main purpose is to define the basic "boundary" operation that ties the primitives in each dimension together. A geometric primitive (GM_Primitive) is a geometric object that is not decomposed further into other primitives in the system. This includes curves and surfaces, even though they are composed of curve segments and surface patches, respectively. This composition 
is a strong aggregation: curve segments and surface patches cannot exist outside the context of a primitive.\par 
NOTE Most geometric primitives are decomposable infinitely many times. Adding a centre point to a line may split that line into two separate lines. A new curve drawn across a surface may divide that surface into two parts, each of which is a surface. This is the reason that the normal definition of primitive as "non-decomposable" is not plausible in a geometry model - the only non-decomposable object in geometry is a point.\par 
Any geometric object that is used to describe a feature is a collection of geometric primitives. A collection of geometric primitives may or may not be a geometric complex. Geometric complexes have additional properties such as closure by boundary operations and mutually exclusive component parts.\par 
GM_Primitive and GM_Complex share most semantics, in the meaning of operations, attributes and associations. There is an exception in that a GM_Primitive shall not contain its boundary (except in the trivial case of GM_Point where the boundary is empty), while a GM_Complex shall contain its boundary in all cases. This means that if an instantiated object implements GM_Object operations both as GM_Primitive and as a GM_Complex, the semantics of each set theoretic operation is determined by the its 
name resolution. Specifically, for a particular object such as GM_CompositeCurve, GM_Primitive::contains (returns FALSE for end points) is different from GM_Complex::contains (returns TRUE for end points). Further, if that object is cast as a GM_Primitive value and as a GM_Complex value, then the two values need not be equal as GM_Objects. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_Object-section,GM_Object>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! dimension() >=  cotainedPrimitive.dimension() (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} topology\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<TP_Primitive-section,TP_Primitive>>  \par 
[0..*]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} proxy\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_OrientablePrimitive-section,GM_OrientablePrimitive>>  \par 
[0..2]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} containingPrimitive\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Primitive-section,GM_Primitive>>  \par 
[0..*]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Primitive-section,Primitive>>  \par 
[]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} composite\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Composite-section,GM_Composite>>  \par 
[0..*]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_90B3BA4D_2826_43E5_8228_B033DFBE1FD0}\par 
\par 
{\*\bkmkstart BKM_78681F99_8589_4883_8190_EFFFB4C04ED3}[[GM_PrimitiveBoundary-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_PrimitiveBoundary* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! The abstract class GM_Primitive boundary is the root for the various return types of the boundary operator for subtypes of GM_Primitive. Since points have no boundary, no special subclass is needed for their boundary. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_Boundary-section,GM_Boundary>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 Abstract\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_78681F99_8589_4883_8190_EFFFB4C04ED3}\par 
\par 
{\*\bkmkstart BKM_4B3109F0_D42E_4ABA_BCC3_E3810FA3971B}[[GM_Ring-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Ring* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! A GM_Ring is used to represent a single connected component of a GM_SurfaceBoundary. It consists of a number of references to GM_OrientableCurves connected in a cycle (an object whose boundary is empty). \par 
A GM_Ring is structurally similar to a GM_CompositeCurve in that the endPoint of each GM_OrientedCurve OrientableCurve in the sequence is the startPoint of the next GM_ OrientableCurve in the Sequence. Since the sequence is circular, there is no exception to this rule. Each ring, like all boundaries is a cycle and each ring is simple.\par 
GM_Ring:\par 
\{isSimple() = TRUE\}\par 
\{isCycle() = TRUE\}\par 
\par 
NOTE Even though each GM_Ring is simple, the boundary need not be simple. The easiest case of this is where one of the interior rings of a surface is tangent to its exterior ring. Implementations may enforce stronger restrictions on the interaction of boundary elements. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_CompositeCurve-section,GM_CompositeCurve>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! isSimple() = TRUE (Invariant):     \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! isCycle() = TRUE (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_4B3109F0_D42E_4ABA_BCC3_E3810FA3971B}\par 
\par 
{\*\bkmkstart BKM_9FAA8124_2583_42DE_B185_31576ABF3940}[[GM_Shell-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Shell* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! A GM_Shell is used to represent a single connected component of a GM_SolidBoundary. It consists of a number of references to GM_OrientableSurfaces connected in a topological cycle (an object whose boundary is empty). Unlike a GM_Ring, a GM_Shell's elements have no natural sort order. Like GM_Rings, GM_Shells are simple.\par 
GM_Shell:\par 
\{isSimple() = TRUE\} \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_CompositeSurface-section,GM_CompositeSurface>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! isSimple() = TRUE (Invariant):     \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Constraint: ! isCycle() = TRUE (Invariant):     \par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_9FAA8124_2583_42DE_B185_31576ABF3940}\par 
\par 
{\*\bkmkstart BKM_E4A21E02_DDCA_4C74_BA07_D4AFAB523690}[[GM_Solid-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Solid* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_Solid (Figure 13), a subclass of GM_Primitive, is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_Primitive-section,GM_Primitive>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} composite\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_CompositeSolid-section,GM_CompositeSolid>>  \par 
[0..*]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Solid-section,Solid>>  \par 
[]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_E4A21E02_DDCA_4C74_BA07_D4AFAB523690}\par 
\par 
{\*\bkmkstart BKM_43148712_426E_4138_BB16_E9C7028BE37D}[[GM_SolidBoundary-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_SolidBoundary* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! The boundary of GM_Solids shall be represented as GM_SolidBoundary. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_PrimitiveBoundary-section,GM_PrimitiveBoundary>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} interior\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Shell-section,GM_Shell>>  \par 
[0..*]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} exterior\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Shell-section,GM_Shell>>  \par 
[0..1]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_43148712_426E_4138_BB16_E9C7028BE37D}\par 
\par 
{\*\bkmkstart BKM_F23E617D_5FEA_4CD6_AAE5_F38E34971B2E}[[GM_Surface-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_Surface* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_Surface (Figure 12) a subclass of GM_Primitive and is the basis for 2-dimensional geometry. Unorientable surfaces such as the M\'f6bius band are not allowed. The orientation of a surface chooses an "up" direction through the choice of the upward normal, which, if the surface is not a cycle, is the side of the surface from which the exterior boundary appears counterclockwise. Reversal of the surface orientation reverses the curve orientation of each 
boundary component, and interchanges the conceptual "up" and "down" direction of the surface. If the surface is the boundary of a solid, the "up" direction is usually outward. For closed surfaces, which have no boundary, the up direction is that of the surface patches, which must be consistent with one another. Its included GM_SurfacePatches describe the interior structure of a GM_Surface.\par 
NOTE Other than the restriction on orientability, no other "validity" condition is required for GM_Surface. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_OrientableSurface-section,GM_OrientableSurface>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_GenericSurface-section,GM_GenericSurface>>  \par 
[]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<Building-section,Building>>  \par 
[0..*]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_F23E617D_5FEA_4CD6_AAE5_F38E34971B2E}\par 
\par 
{\*\bkmkstart BKM_41EB3712_6889_4379_AA65_EAE06191ED9B}[[GM_SurfaceBoundary-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_SurfaceBoundary* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! The boundary of GM_Surfaces shall be represented as GM_SurfaceBoundary. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<GM_PrimitiveBoundary-section,GM_PrimitiveBoundary>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 type\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} exterior\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Ring-section,GM_Ring>>  \par 
[0..1]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} interior\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Ring-section,GM_Ring>>  \par 
[0..*]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_41EB3712_6889_4379_AA65_EAE06191ED9B}\par 
\par 
{\*\bkmkstart BKM_7F1C00AA_8C61_470D_BCED_2559FF01FADC}[[GM_SurfaceInterpolation-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_SurfaceInterpolation* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_SurfaceInterpolation (Figure 20) is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema. Valid values for "interpolation" include, but are not limited, to the following:\par 
a) None (none) - the interior of the surface is not specified. The assumption is that the surface follows the reference surface defined by the coordinate reference system.\par 
b) Planar (planar) - the interpolation method shall return points on a single plane. The boundary in this case shall be contained within that plane.\par 
c) Spherical (spherical), Elliptical (elliptical), Conic (conic) - the surface is a section of a spherical, elliptical or conic surface.\par 
d) TIN (tin) - the control points are organized into adjoining triangles, which form small planar segments.\par 
e) Parametric Curve (parametricCurve) - the control points are organized into a 2-dimensional grid and each cell within the grid is spanned by a surface which shall be defined by a family of curves.\par 
f) Polynomial Spline (polynomialSpline) - the control points are organized into an irregular 2-dimensional grid and each cell within this grid is spanned by a polynomial spline function.\par 
g) Rational Spline (rationalSpline) - the control points are organized into an irregular 2-dimensional grid and each cell within this grid is spanned by a rational (quotient of polynomials) spline function.\par 
h) Triangulated Spline (triangulatedSpline) - the control points are organized into adjoining triangles, each of which is spanned by a polynomial spline function.\par 
If more than one interpolation description fits the method used, then the most restrictive one will be used. \par 
GM_SurfaceInterpolation::\par 
none \par 
planar \par 
spherical \par 
elliptical \par 
conic \par 
tin \par 
parametricCurve \par 
polynomialSpline \par 
rationalSpline \par 
triangualtedSpline \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<-section,>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 CodeList\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_CFD32967_AC94_416F_A49C_40153AF14E9D} \par 
!\{set:cellbgcolor:#FFFFFF\} conic\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_CFD32967_AC94_416F_A49C_40153AF14E9D}\par 
{\*\bkmkstart BKM_C83A5F99_F645_437F_9E47_ACEF1654048D} \par 
!\{set:cellbgcolor:#FFFFFF\} elliptical\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_C83A5F99_F645_437F_9E47_ACEF1654048D}\par 
{\*\bkmkstart BKM_B4FF0CAD_BE84_4016_8C3C_1C4BF11520D4} \par 
!\{set:cellbgcolor:#FFFFFF\} none\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_B4FF0CAD_BE84_4016_8C3C_1C4BF11520D4}\par 
{\*\bkmkstart BKM_DA08D884_28C9_4950_8726_933F638A0BA4} \par 
!\{set:cellbgcolor:#FFFFFF\} parametricCurve\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_DA08D884_28C9_4950_8726_933F638A0BA4}\par 
{\*\bkmkstart BKM_7BB241B7_F5D7_4F4F_8E0A_6CBEA8BF76D9} \par 
!\{set:cellbgcolor:#FFFFFF\} planar\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_7BB241B7_F5D7_4F4F_8E0A_6CBEA8BF76D9}\par 
{\*\bkmkstart BKM_8B6FFAB1_19D3_417E_98E7_E98919FFD01D} \par 
!\{set:cellbgcolor:#FFFFFF\} polynomialSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_8B6FFAB1_19D3_417E_98E7_E98919FFD01D}\par 
{\*\bkmkstart BKM_BA5F1CC4_3B8F_4CF6_88F9_47172052C134} \par 
!\{set:cellbgcolor:#FFFFFF\} rationalSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_BA5F1CC4_3B8F_4CF6_88F9_47172052C134}\par 
{\*\bkmkstart BKM_281A5F81_34EE_4B82_92A7_6AFB1176BB0B} \par 
!\{set:cellbgcolor:#FFFFFF\} spherical\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_281A5F81_34EE_4B82_92A7_6AFB1176BB0B}\par 
{\*\bkmkstart BKM_A8C078AB_EFCA_4D05_8802_54A6398663DE} \par 
!\{set:cellbgcolor:#FFFFFF\} tin\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_A8C078AB_EFCA_4D05_8802_54A6398663DE}\par 
{\*\bkmkstart BKM_9EE92AC4_3BB7_4B39_8025_1A917BC37652} \par 
!\{set:cellbgcolor:#FFFFFF\} triangulatedSpline\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<<undefined>-section,<undefined>>>  !{\*\bkmkend BKM_9EE92AC4_3BB7_4B39_8025_1A917BC37652}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|=== {\*\bkmkend BKM_7F1C00AA_8C61_470D_BCED_2559FF01FADC}\par 
\par 
{\*\bkmkstart BKM_EED87954_734C_4835_AD1B_4EF08E96ED3E}[[GM_SurfacePatch-section]]\par 
[cols="1a"]\par 
|===\par 
|*GM_SurfacePatch* \par 
|[cols="1,4",frame=none,grid=none]\par 
!===\par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Definition: ! GM_SurfacePatch (Figure 20) defines a homogeneous portion of a GM_Surface. The multiplicity of the association "Segmentation" (Figure 12) specifies that each GM_SurfacePatch shall be in at most one GM_Surface. \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}Subclass Of: ! <<-section,>> \par 
!\{nbsp\}\{nbsp\}\{nbsp\}\{nbsp\}StereoType: !  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u171 \'ab\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20 Abstract\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\u187 \'bb\plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Role name* !*Target class and multiplicity*  !*Definition*\par 
!\{set:cellbgcolor:#FFFFFF\} \plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_GenericSurface-section,GM_GenericSurface>>  \par 
[]\par 
!\par 
!\{set:cellbgcolor:#FFFFFF\} surface\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20  \par 
!<<GM_Surface-section,GM_Surface>>  \par 
[0..1]\par 
!\par 
!===\par 
|[cols="15,20,60",frame=none,grid=none,options="header"]\par 
!===\par 
!\{set:cellbgcolor:#DDDDDD\} *Attribute* !*Value type and multiplicity* !*Definition*\par 
{\*\bkmkstart BKM_09E59306_48E4_4647_A135_7D6B7A17400C} \par 
!\{set:cellbgcolor:#FFFFFF\} interpolation\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<GM_SurfaceInterpolation-section,GM_SurfaceInterpolation>>  !{\*\bkmkend BKM_09E59306_48E4_4647_A135_7D6B7A17400C}\par 
{\*\bkmkstart BKM_6164091F_0DD0_49CB_ACF3_908EC78825C0} \par 
!\{set:cellbgcolor:#FFFFFF\} numDerivativesOnBoundary\plain\f2\fs24\lang1033\hich\f2\dbch\f2\loch\f2\cf2\fs24  \plain\f1\fs20\lang1033\hich\f1\dbch\f1\loch\f1\cf2\fs20   !<<Integer-section,Integer>>  [0..1] !{\*\bkmkend BKM_6164091F_0DD0_49CB_ACF3_908EC78825C0}\par 
!===\par 
|\{set:cellbgcolor:#FFFFFF\} Note: Unless otherwise specified, all attributes and rolls have the stereotype \'abProperty\'bb\par 
|===   {\*\bkmkend BKM_EED87954_734C_4835_AD1B_4EF08E96ED3E}{\*\bkmkend GEOMETRIC_PRIMITIVE}{\*\bkmkend BKM_5BA4E1D8_85FE_4C3C_9084_071399936FC4}\par 
\par 
\plain\f1\fs20\lang3081\hich\f1\dbch\f1\loch\f1\fs20\par 
\plain\f0\fs24\par 
}
